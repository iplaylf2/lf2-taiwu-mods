name: On Push to Mod Tag

on:
  push:
    tags:
      - mods/*/v*

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse Tag and Set Variables
        run: |
          set -euo pipefail
          FULL_TAG="${GITHUB_REF#refs/tags/}"

          if [[ ! "$FULL_TAG" =~ ^mods/[^/]+/v[^/]+$ ]]; then
            echo "::error::Invalid tag format. Expected 'mods/<mod-name>/v<version>'"
            exit 1
          fi

          MOD_NAME="${FULL_TAG#mods/}"
          MOD_NAME="${MOD_NAME%%/*}"
          VERSION="${FULL_TAG##*/}"
          VERSION="${VERSION#v}"

          echo "MOD_NAME=$MOD_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "FULL_TAG=$FULL_TAG" >> $GITHUB_ENV

      - name: Get MSBuild Properties
        run: |
          set -euo pipefail
          GAME_VERSION=$(dotnet msbuild projects/unmanaged-vendor/game/Taiwu.Backend -getProperty:LF2TaiwuVersion)
          PUBLISH_BASE_DIR=$(dotnet msbuild projects/unmanaged-vendor/game/Taiwu.Backend -getProperty:LF2PublishDir)

          if [ -z "$GAME_VERSION" ] || [ -z "$PUBLISH_BASE_DIR" ]; then
            echo "::error::Failed to retrieve MSBuild properties (LF2TaiwuVersion or LF2PublishDir)."
            exit 1
          fi

          echo "GAME_VERSION=$GAME_VERSION" >> $GITHUB_ENV
          echo "PUBLISH_BASE_DIR=$PUBLISH_BASE_DIR" >> $GITHUB_ENV

      - name: Build and Publish Mod
        run: |
          dotnet build -t:LF2PublishMod -c Release \
            -p:LF2Mod=${{ env.MOD_NAME }} \
            -p:Version=${{ env.VERSION }}

      - name: Package Artifact for Release
        run: |
          set -euo pipefail
          MOD_PUBLISH_DIR="${{ env.PUBLISH_BASE_DIR }}/${{ env.MOD_NAME }}"
          RELEASE_ARCHIVE="${{ env.MOD_NAME }}_v${{ env.VERSION }}.zip"
          BUILD_DATE_READABLE=$(date -u +'%Y-%m-%d %H:%M:%S UTC')

          (cd "$MOD_PUBLISH_DIR" && zip -r "../../${RELEASE_ARCHIVE}" .)

          echo "RELEASE_ARCHIVE=$RELEASE_ARCHIVE" >> $GITHUB_ENV
          echo "BUILD_DATE_READABLE=$BUILD_DATE_READABLE" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.FULL_TAG }}
          name: ${{ env.MOD_NAME }} v${{ env.VERSION }}
          body: |
            ## Mod Release: ${{ env.MOD_NAME }}
            **Version**: ${{ env.VERSION }}
            **Game Version**: ${{ env.GAME_VERSION }}
            **Build Date**: ${{ env.BUILD_DATE_READABLE }}
          files: ${{ env.RELEASE_ARCHIVE }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
